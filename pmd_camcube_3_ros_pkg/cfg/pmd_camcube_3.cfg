#! /usr/bin/env python
# PMD camera configuration

PACKAGE='pmd_camcube_3_ros_pkg'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#Note: Reconfiguration level is currently set to 0 for all the parameters, assuming that the parameters can be changed when when the sensor is running....

#       Name			Type      	Reconfiguration level   Description	Default    	Min   	Max

gen.add("Integration_Time",	int_t,	0, "Integration time(in msec) for the sensor",250,	238,5000)

gen.add("Modulation_Frequency",	int_t,	0,"Set the modulation frequency(Hz) of the sensor. By Default the frequency closest to the given value will be set.",20000000,18000000,23000000)
gen.add("At_Least",bool_t,	0,"Modulation Frequency no less than the entered frequency will be set", False)
gen.add("At_Most",bool_t,	0,"Modulation Frequency no more than the entered frequency will be set", False)

gen.add("Statistical_Noise_Filter_On",bool_t,	0,"Whether to apply statistical noise filter from pcl or not.", False)
gen.add("Noise_Filtering_NoOfNeighbours", int_t, 0,"No of neighbours to be considered for applying statistical noise reduction",30,1,200)
gen.add("Std_Dev_Mul_Threshold", double_t, 0,"Standard Deviation Multiplier Threshold for applying statistical noise reduction",0.4,0,10)

gen.add("Amplitude_Filter_On",bool_t,	0,"Whether to apply amplitude filter or not. Image pixels with amplitude values less than the threshold will be filtered out", False)
gen.add("Amplitude_Threshold",	double_t,	0,"What should be the amplitude filter threshold. Image pixels with lesser aplitude values will be filtered out. Amplitude Filter Status should be true to use this filter.",0,0,2500)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "pmd_camcube_3_ros_pkg"))
